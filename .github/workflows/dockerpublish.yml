name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
    pull_request:
      - "*"

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: jw-public

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v2
        with:
          path: src/.meteor/local
          key: ${{ runner.os }}-node-${{ hashFiles('src/.meteor/versions') }}
          restore-keys: |
            ${{ runner.os }}-meteor-
      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: "1.12"
      - run: cd src && meteor npm install
      - run: cd src && meteor npm run compile
      - run: cd src && meteor npm test
      - uses: cypress-io/github-action@v2
        with:
          project: ./src
          working-directory: ./src
          start: meteor
          # wait for all services to respond
          install-command: echo "skipped"
          command: meteor npm run cypress:headless
          wait-on: "http://localhost:3000"
          record: true
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: src/cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: src/cypress/videos
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run hadolint with reviewdog
        uses: reviewdog/action-hadolint@v1
        with:
          filter_mode: file
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v2
        with:
          path: src/.meteor/local
          key: ${{ runner.os }}-node-${{ hashFiles('src/.meteor/versions') }}
          restore-keys: |
            ${{ runner.os }}-meteor-
      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: "1.12"
      - run: cd src && meteor npm install
      - run: cd src && meteor npm run compile
      - run: cd src && meteor build --allow-superuser ./build
      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: "1.12"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: src/.meteor/local
          key: ${{ runner.os }}-node-${{ hashFiles('src/.meteor/versions') }}
          restore-keys: |
            ${{ runner.os }}-meteor-
      - run: cd src && meteor npm install
      - run: cd src && meteor npm run compile
      - run: cd src && meteor npm test
      - run: cd src && meteor build --allow-superuser ./build
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: |
            icereed/jw-public:latest

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./userdocs
          file: userdocs/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            icereed/jw-public-docs:latest
